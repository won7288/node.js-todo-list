서버 -> 클라이언트로부터 요청을 받으면, 요청한 내용을 보내주는 프로그램

요청은 4개 방식이 있다
1. 읽기(GET)
2. 쓰기(POST)
3. 수정(PUT)
4. 삭제(DELETE)

JavaScript
웹페이지를 다이나믹하게 바꿔주기 가능 -> 정적인 HTML을 동적기능 추가
HTML 조작이 가능하기 때문

JavaScript 해석은 누가 해석하는가 -> 브라우저가 해석

Node.js(V8)
브라우저 내에서 말고도 다른 환경에서도 JavaScript 실행할 수 있게 도와줌
자바스크립트 실행창, 실행환경 => 런타임

Node.js 특징
Event-driven, Non blocking/IO(비동기 방식)
요청이 많거나 오래걸리는 요청이 있어도 멈추거나 요청 대기시간X
주로 웹서비스 만드는데 사용

npm -> 라이브러리 설치를 도와주는 도구
라이브러리를 어떤걸 사용했는지 기록을 하면 좋다
-> package.json에 기록이 됨

nodemon -> 서버 재실행 자동화 라이브러리
nodemon 실행시 오류가 뜰때
powershell 관리자권한 실행후
executionpolicy 입력
set-executionpolicy unrestricted
y 입력

콜백함수 -> 함수안에 함수
.get('경로', function(요청내용, 응답할 방법){})

REST API란 무엇인가
서버만들 때 REST하게 API를 짜는게 중요

API란 무엇인가
웹개발시 -> 서버와 고객간의 소통방법, 어떻게 해야 서버랑 통신할 수 있을까

REST 원칙 6개
1. Uniform interface
하나의 자료는 하나의 URL로
URL 하나를 알면 둘을 알 수 있어야함
요청과 응답은 정보가 충분히 들어있어야 함

2. Cliend-Server 역할구분
브라우저는 요청만 할 뿐
서버는 응답만 할 뿐

3.Stateless
요청1과 요청2는 의존성이 없어야함

4.Cacheable
서버에서 보내주는 정보들은 캐싱이 가능해야함
캐싱을 위한 버전 같은 것도 관리 잘해야함
5.Layered System
6.Code on Demand
